name: CI

on:
  pull_request:
  push:
    branches: [ master, main, develop ]

env:
  POSTGRES_VERSION: 15
  REDIS_VERSION: 7
  BUN_VERSION: latest
  RAILS_ENV: test
  CI: true

jobs:
  scan_ruby:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

      - name: Check for security vulnerabilities in Ruby dependencies
        run: |
          gem install bundler-audit
          bundle-audit check --update

  scan_js:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install JavaScript dependencies with Bun
        run: bun install

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bun audit

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install JavaScript dependencies
        run: bun install

      - name: Lint Ruby code for consistent style
        run: bin/rubocop -f github

      - name: Lint JavaScript code with ESLint
        run: bun run lint:js

      - name: Lint CSS with Stylelint
        run: bun run lint:css

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    permissions:
      contents: read
      actions: read
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: docusphere
          POSTGRES_PASSWORD: password
          POSTGRES_DB: docusphere_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      selenium:
        image: seleniarm/standalone-chromium:latest
        ports:
          - 4444:4444
          - 7900:7900
        options: >-
          --shm-size=2gb
          --health-cmd "curl -f http://localhost:4444/wd/hub/status || exit 1"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 3
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Install system dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y \
            libpq-dev \
            imagemagick \
            libmagickwand-dev \
            poppler-utils \
            tesseract-ocr \
            libreoffice \
            ghostscript \
            libvips-dev

      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install JavaScript dependencies with Bun
        run: bun install

      - name: Build assets with Bun
        run: |
          bun run build
          bun run build:css

      - name: Setup parallel test databases
        env:
          RAILS_ENV: test
          DATABASE_HOST: localhost
          REDIS_URL: redis://localhost:6379/0
          PARALLEL_TEST_PROCESSORS: 4
        run: |
          bin/rails db:create
          bin/rails db:schema:load
          bin/rails parallel:create
          bin/rails parallel:load_schema

      - name: Run Ruby tests (excluding system tests)
        env:
          RAILS_ENV: test
          DATABASE_HOST: localhost
          REDIS_URL: redis://localhost:6379/0
          PARALLEL_TEST_PROCESSORS: 4
        run: |
          bundle exec parallel_rspec spec/ --exclude-pattern "spec/system/**/*_spec.rb" --format progress

      - name: Run Immo::Promo engine tests (excluding system tests)
        env:
          RAILS_ENV: test
          DATABASE_HOST: localhost
          REDIS_URL: redis://localhost:6379/0
          PARALLEL_TEST_PROCESSORS: 4
        run: |
          cd engines/immo_promo && bundle exec parallel_rspec spec/ --exclude-pattern "spec/system/**/*_spec.rb" --format progress

      - name: Run JavaScript tests with Bun
        run: bun test

      - name: Run system tests
        env:
          RAILS_ENV: test
          DATABASE_HOST: localhost
          REDIS_URL: redis://localhost:6379/0
          SELENIUM_REMOTE_URL: http://localhost:4444/wd/hub
          CAPYBARA_SERVER_HOST: 0.0.0.0
        run: |
          bundle exec rspec spec/system/ --format progress
          cd engines/immo_promo && bundle exec rspec spec/system/ --format progress

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: test-artifacts
          path: |
            tmp/screenshots/
            coverage/
            log/test.log
          retention-days: 7

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage
          path: coverage/
          retention-days: 30

